package com.demo.matching.member.mock;

import com.demo.matching.member.domain.Member;
import com.demo.matching.member.service.port.in.MemberRepository;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;
import java.util.concurrent.atomic.AtomicLong;

public class MockMemberRepository implements MemberRepository {

    private final AtomicLong autoGeneratedId = new AtomicLong(0);
    private final List<Member> data = new ArrayList<>();

    @Override
    public Member save(Member member) {
        if (Objects.isNull(member.getId())) {
            Member createMember = Member.builder()
                    .id(autoGeneratedId.incrementAndGet())
                    .name(member.getName())
                    .build();
            data.add(createMember);
            return createMember;
        }
        else {
            data.removeIf(item -> Objects.equals(item.getId(), member.getId()));
            data.add(member);
            return member;
        }
    }
}
